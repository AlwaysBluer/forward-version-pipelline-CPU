控制冒险的解决方法：静态分支预测
   由于跳转指令在exe阶段才能得到是否跳转的信息，根据静态分支预测的解决方法，在跳转指令处于if, id阶段时，pc和if/id寄存器内容在时钟上升沿到来时按顺序载入指令。当跳转指令达到exe阶段，指令得到跳转信号。此时，如果跳转信号为0，即不跳转，则之前pc，if/id按顺序载入的指令是正确的，此时流水线正常执行不需要变动；如果此时跳转信号为1，即需要跳转，那么pc的值（对应于跳转指令_pc + 8），if/id寄存器的指令本不应该在流水线中，需要重置。则在下一个时钟上升沿到来后，将if/id寄存器，id/exe寄存器清零（清零是为了消除掉exe阶段的跳转信号，跳转指令的信号此时传递到了exe/mem），pc更新为要跳转的目标pc值。下一个时钟上升沿到来后，if/id中载入的指令就是正确的了，以此消除控制冒险。


数据冒险的解决方法：暂停/前递
（1）只有暂停时：状态机
数据冒险分为3种情况 id-exe, id-mem, mem-wb,分别需要暂停3，2，1个时钟周期，可以通过清零信号（清零信号的作用是消除存在冒险的流水线寄存器的信息以避免冒险状态判断锁死在这一阶段）和控制信号，将冒险状态改变
1. id-exe冒险：时钟上升沿到来后，pc保持不变，if/id寄存器保持不变，id/exe寄存器内容传递给exe/mem寄存器，然后将id/exe寄存器内信号清零，mem/wb寄存器正常更新，则此时冒险转化为id-mem冒险
2.id-mem冒险：时钟上升沿到来后，pc保持不变，if/id寄存器保持不变，id/exe寄存器保持不变，exe/mem寄存器信息传递到mem/wb寄存器，exe/mem寄存器清空，冒险转化为mem-wb冒险
3.mem-wb冒险：时钟上升沿到来后，pc保持不变，if/id寄存器保持不变，id/exe寄存器保持不变，exe/mem寄存器不变，数据写入regFile模块,mem/wb流水线寄存器清零，则冒险消除。
不存在冒险时，所有暂停，清零信号复位。

（2）暂停基础上设置前递：暂停+数据前递
  暂停：
  暂停的情况只在lw指令出现冒险时使用，操作对应于id-exe冒险，但只需暂停一个周期转化为exe-mem冒险时,内存数据被读出，即可利用前递，无需继续暂停
  前递：
  1.存在id-exe冒险:将alu计算值前递到对应存在冒险的寄存器
  2.存在id-mem冒险：将exe/mem中传出的计算值前递到对应存在冒险的寄存器
  3.存在id-wb冒险：将mem/wb寄存器中准备写入regFile中的值前递到对应存在冒险的寄存器
